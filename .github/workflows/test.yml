name: Run Playwright tests

on:
  schedule:
    - cron: '30 3 * * 1-5' # 9:00 AM IST on weekdays
  workflow_dispatch:

jobs:
  run-tests:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        shardTotal: [10]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache npm modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Run tests and upload reports after each test file
        run: |
          # Run tests with the list reporter to get file names
          TEST_FILES=$(npx playwright test --list --reporter=list | grep -E '\.spec\.ts$' || true)
          
          for FILE in $TEST_FILES; do
            echo "Running test file: $FILE"
            # Run individual test file
            npx playwright test $FILE --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} || true
            
            # Upload report after each test file
            if [ -d "./blob-report" ]; then
              echo "Uploading report for $FILE"
              # Create a unique name for each artifact
              ARTIFACT_NAME="test-report-${{ matrix.shardIndex }}-$(date +%s)"
              gh run download $GITHUB_RUN_ID -n "$ARTIFACT_NAME" -p ./blob-report || echo "Failed to upload report"
              
              # Alternative if gh CLI isn't available
              # tar -czf report.tar.gz ./blob-report
              # curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
              #   -H "Accept: application/vnd.github.v3+json" \
              #   https://api.github.com/repos/$GITHUB_REPOSITORY/actions/artifacts \
              #   -F "name=$ARTIFACT_NAME" -F "data=@report.tar.gz"
            fi
          done

      - name: Final blob report upload
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: test-blob-report-${{ matrix.shardIndex }}
          path: ./blob-report
          retention-days: 1

      - name: Upload .temp folder (only on shard 1)
        if: ${{ matrix.shardIndex == 1 && !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: temp-folder
          path: ./.temp

  merge-reports:
    name: Merge Reports
    needs: [run-tests]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache npm modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Download blob reports
        uses: actions/download-artifact@v4
        with:
          path: ./all-reports
          pattern: '*-blob-report-*'
          merge-multiple: true

      - name: Download individual test reports
        uses: actions/download-artifact@v4
        with:
          path: ./individual-reports
          pattern: 'test-report-*'
          merge-multiple: true

      - name: Download .temp folder
        uses: actions/download-artifact@v4
        with:
          name: temp-folder
          path: ./.temp

      - name: List .temp folder content
        run: ls -R ./.temp || echo ".temp folder not found!"

      - name: Run mergeTestData
        run: npx ts-node ./dataClenUpScripts/mergeTestData.ts
