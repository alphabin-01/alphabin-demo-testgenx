name: Run Playwright tests

on:
  schedule:
    - cron: '30 3 * * 1-5'  # 9:00 AM IST on weekdays
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to run the tests'
        required: true
        default: 'Development'
        type: choice

jobs:
  run-pagination-job1:
    name: Run @pagination - Set 1
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'Development' }}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - uses: ./.github/actions/setup

      - name: Run pagination set 1
        run: npm run test:chrome -- --grep="@pagination .*Page1"

  run-pagination-job2:
    name: Run @pagination - Set 2
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'Development' }}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - uses: ./.github/actions/setup

      - name: Run pagination set 2
        run: npm run test:chrome -- --grep="@pagination .*Page2"

  run-non-pagination-job1:
    name: Run non-@pagination - Set 1
    runs-on: ubuntu-latest
    needs: [run-pagination-job1, run-pagination-job2]
    if: ${{ always() }}
    environment: ${{ github.event.inputs.environment || 'Development' }}
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - uses: ./.github/actions/setup

      - name: Run non-pagination set 1
        run: npm run test:chrome -- --grep-invert="@pagination" --grep="Login|Dashboard"

  run-non-pagination-job2:
    name: Run non-@pagination - Set 2
    runs-on: ubuntu-latest
    needs: [run-pagination-job1, run-pagination-job2]
    if: ${{ always() }}
    environment: ${{ github.event.inputs.environment || 'Development' }}
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - uses: ./.github/actions/setup

      - name: Run non-pagination set 2
        run: npm run test:chrome -- --grep-invert="@pagination" --grep="Settings|Reports"

  merge-reports:
    name: Merge Reports
    needs: [run-non-pagination-job1, run-non-pagination-job2]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - uses: ./.github/actions/setup
      - name: Merge HTML report
        run: npx playwright merge-reports --config=playwright.config.ts ./all-reports

  data-cleanup:
    name: Data Cleanup
    needs: merge-reports
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - uses: ./.github/actions/setup

      - name: Run cleanup
        run: |
          npx ts-node ./dataClenUpScripts/mergeTestData.ts &&
          npx ts-node ./dataClenUpScripts/updateToIsTestData.ts &&
          npx ts-node ./dataClenUpScripts/deleteTestData.ts
